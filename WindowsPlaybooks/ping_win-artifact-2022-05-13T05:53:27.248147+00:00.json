{
    "version": "1.0.0",
    "plays": [
        {
            "playbook": "/var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml",
            "playbook_uuid": "aa42b701-b61b-4699-803d-d8fc5e1ef2a5",
            "play": "ping win",
            "play_uuid": "06070686-087b-a1db-fdb8-000000000006",
            "play_pattern": "all",
            "name": "ping win",
            "pattern": "all",
            "uuid": "06070686-087b-a1db-fdb8-000000000006",
            "__play_name": "ping win",
            "tasks": [
                {
                    "playbook": "/var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml",
                    "playbook_uuid": "aa42b701-b61b-4699-803d-d8fc5e1ef2a5",
                    "play": "ping win",
                    "play_uuid": "06070686-087b-a1db-fdb8-000000000006",
                    "play_pattern": "all",
                    "task": "Gathering Facts",
                    "task_uuid": "06070686-087b-a1db-fdb8-00000000000c",
                    "task_action": "gather_facts",
                    "task_args": "",
                    "task_path": "/var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml:3",
                    "host": "192.168.4.92",
                    "uuid": "b20a55bb-27e6-47bd-aa72-307ff09ccb8a",
                    "__host": "192.168.4.92",
                    "__result": "OK",
                    "__changed": false,
                    "__duration": "2s",
                    "__number": 0,
                    "__task": "Gathering Facts",
                    "__task_action": "gather_facts",
                    "remote_addr": "192.168.4.92",
                    "res": {
                        "ansible_facts": {
                            "ansible_ip_addresses": [
                                "192.168.4.92"
                            ],
                            "ansible_windows_domain_role": "Member server",
                            "ansible_architecture2": "x86_64",
                            "ansible_user_gecos": "",
                            "ansible_distribution_major_version": "10",
                            "ansible_pagefiletotal_mb": 1792,
                            "ansible_os_name": "Microsoft Windows Server 2019 Datacenter",
                            "ansible_system_description": "",
                            "ansible_machine_id": "S-1-5-21-3327316453-2611415689-558128918",
                            "ansible_product_serial": "VMware-56 4d ff 78 d7 a6 19 b3-e8 77 7b 1a 7b 2a 97 98",
                            "ansible_system_vendor": "VMware, Inc.",
                            "gather_subset": [
                                "all"
                            ],
                            "ansible_bios_version": "6.00",
                            "ansible_user_id": "Administrator",
                            "ansible_date_time": {
                                "epoch_local": "1652396003.04674",
                                "epoch_int": 1652421203,
                                "date": "2022-05-12",
                                "second": "23",
                                "tz": "Pacific Standard Time",
                                "iso8601_micro": "2022-05-13T05:53:23.046736Z",
                                "iso8601_basic_short": "20220512T225323",
                                "minute": "53",
                                "day": "12",
                                "weekday": "Thursday",
                                "iso8601": "2022-05-13T05:53:23Z",
                                "tz_offset": "-07:00",
                                "iso8601_basic": "20220512T225323046736",
                                "epoch": "1652421203.04674",
                                "weekday_number": "4",
                                "hour": "22",
                                "year": "2022",
                                "month": "05",
                                "time": "22:53:23",
                                "weeknumber": "18"
                            },
                            "ansible_user_dir": "C:\\Users\\Administrator",
                            "ansible_win_rm_certificate_expires": "2025-05-10 15:35:43",
                            "ansible_processor_vcpus": 2,
                            "ansible_user_sid": "S-1-5-21-3327316453-2611415689-558128918-500",
                            "ansible_owner_contact": "",
                            "ansible_distribution": "Microsoft Windows Server 2019 Datacenter",
                            "ansible_processor": [
                                "0",
                                "GenuineIntel",
                                "Intel(R) Xeon(R) W-2140B CPU @ 3.20GHz",
                                "1",
                                "GenuineIntel",
                                "Intel(R) Xeon(R) W-2140B CPU @ 3.20GHz"
                            ],
                            "ansible_powershell_version": 5,
                            "ansible_uptime_seconds": 134,
                            "module_setup": true,
                            "ansible_interfaces": [
                                {
                                    "connection_name": "Ethernet0",
                                    "interface_name": "Intel(R) 82574L Gigabit Network Connection",
                                    "macaddress": "00:0C:29:2A:97:98",
                                    "default_gateway": "192.168.4.2",
                                    "interface_index": 9,
                                    "dns_domain": "win2k9nodns.ravi.local"
                                }
                            ],
                            "ansible_distribution_version": "10.0.17763.0",
                            "ansible_windows_domain_member": true,
                            "ansible_swaptotal_mb": 0,
                            "ansible_hostname": "win2019dns",
                            "ansible_virtualization_role": "guest",
                            "ansible_memfree_mb": 10325,
                            "ansible_processor_count": 128,
                            "ansible_os_product_type": "server",
                            "ansible_netbios_name": "WIN2019DNS",
                            "ansible_product_name": "VMware Virtual Platform",
                            "ansible_virtualization_type": "VMware",
                            "ansible_os_installation_type": "Server",
                            "ansible_lastboot": "2022-05-12 22:51:10Z",
                            "ansible_architecture": "64-bit",
                            "ansible_bios_date": "11/12/2020",
                            "ansible_processor_cores": 1,
                            "ansible_fqdn": "win2019dns.win2k9nodns.ravi.local",
                            "ansible_domain": "win2k9nodns.ravi.local",
                            "ansible_memtotal_mb": 11776,
                            "ansible_kernel": "10.0.17763.0",
                            "ansible_pagefilefree_mb": 1792,
                            "ansible_nodename": "win2019dns.win2k9nodns.ravi.local",
                            "ansible_os_family": "Windows",
                            "ansible_processor_threads_per_core": 0,
                            "ansible_owner_name": "Windows User",
                            "ansible_windows_domain": "win2k9nodns.ravi.local",
                            "ansible_reboot_pending": false,
                            "ansible_system": "Win32NT"
                        },
                        "warnings": [],
                        "deprecations": [],
                        "_ansible_verbose_override": true,
                        "_ansible_no_log": false,
                        "changed": false
                    },
                    "start": "2022-05-13T05:53:22.373122",
                    "end": "2022-05-13T05:53:25.278145",
                    "duration": 2.905023,
                    "event_loop": null
                },
                {
                    "playbook": "/var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml",
                    "playbook_uuid": "aa42b701-b61b-4699-803d-d8fc5e1ef2a5",
                    "play": "ping win",
                    "play_uuid": "06070686-087b-a1db-fdb8-000000000006",
                    "play_pattern": "all",
                    "task": "test ping",
                    "task_uuid": "06070686-087b-a1db-fdb8-000000000008",
                    "task_action": "win_ping",
                    "task_args": "",
                    "task_path": "/var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml:6",
                    "host": "192.168.4.92",
                    "uuid": "fe5a4b9c-5651-497d-b7b4-bb2df87a3e7b",
                    "__host": "192.168.4.92",
                    "__result": "OK",
                    "__changed": false,
                    "__duration": "1s",
                    "__number": 1,
                    "__task": "test ping",
                    "__task_action": "win_ping",
                    "remote_addr": "192.168.4.92",
                    "res": {
                        "changed": false,
                        "invocation": {
                            "module_args": {
                                "data": "pong"
                            }
                        },
                        "ping": "pong",
                        "_ansible_no_log": false
                    },
                    "start": "2022-05-13T05:53:25.291494",
                    "end": "2022-05-13T05:53:26.730639",
                    "duration": 1.439145,
                    "event_loop": null
                }
            ]
        }
    ],
    "stdout": [
        "\u001b[0;34mansible-playbook [core 2.12.1]\u001b[0m",
        "\u001b[0;34m  config file = /var/lib/awx/projects/raviprj/WindowsPlaybooks/ansible.cfg\u001b[0m",
        "\u001b[0;34m  configured module search path = ['/home/runner/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\u001b[0m",
        "\u001b[0;34m  ansible python module location = /usr/lib/python3.8/site-packages/ansible\u001b[0m",
        "\u001b[0;34m  ansible collection location = /home/runner/.ansible/collections:/usr/share/ansible/collections\u001b[0m",
        "\u001b[0;34m  executable location = /usr/bin/ansible-playbook\u001b[0m",
        "\u001b[0;34m  python version = 3.8.8 (default, Aug 11 2021, 06:52:42) [GCC 8.5.0 20210514 (Red Hat 8.5.0-3)]\u001b[0m",
        "\u001b[0;34m  jinja version = 2.10.3\u001b[0m",
        "\u001b[0;34m  libyaml = True\u001b[0m",
        "\u001b[0;34mUsing /var/lib/awx/projects/raviprj/WindowsPlaybooks/ansible.cfg as config file\u001b[0m",
        "\u001b[0;35m[DEPRECATION WARNING]: [defaults]callback_whitelist option, normalizing names \u001b[0m",
        "\u001b[0;35mto new standard, use callbacks_enabled instead. This feature will be removed \u001b[0m",
        "\u001b[0;35mfrom ansible-core in version 2.15. Deprecation warnings can be disabled by \u001b[0m",
        "\u001b[0;35msetting deprecation_warnings=False in ansible.cfg.\u001b[0m",
        "\u001b[0;34msetting up inventory plugins\u001b[0m",
        "\u001b[0;34mhost_list declined parsing /var/lib/awx/projects/raviprj/WindowsPlaybooks/inventory as it did not pass its verify_file() method\u001b[0m",
        "\u001b[0;34mscript declined parsing /var/lib/awx/projects/raviprj/WindowsPlaybooks/inventory as it did not pass its verify_file() method\u001b[0m",
        "\u001b[0;34mauto declined parsing /var/lib/awx/projects/raviprj/WindowsPlaybooks/inventory as it did not pass its verify_file() method\u001b[0m",
        "\u001b[0;34mParsed /var/lib/awx/projects/raviprj/WindowsPlaybooks/inventory inventory source with ini plugin\u001b[0m",
        "\u001b[0;34mredirecting (type: modules) ansible.builtin.win_ping to ansible.windows.win_ping\u001b[0m",
        "\u001b[0;34mLoading collection ansible.windows from /var/lib/awx/projects/raviprj/WindowsPlaybooks/collections/ansible_collections/ansible/windows\u001b[0m",
        "\u001b[0;34mLoading callback plugin awx_display of type stdout, v2.0 from /usr/lib/python3.8/site-packages/ansible_runner/callbacks/awx_display.py\u001b[0m",
        "\u001b[0;34mredirecting (type: callback) ansible.builtin.timer to ansible.posix.timer\u001b[0m",
        "\u001b[1;35m[WARNING]: Skipping callback plugin 'timer', unable to load\u001b[0m",
        "\u001b[0;34mredirecting (type: callback) ansible.builtin.profile_tasks to ansible.posix.profile_tasks\u001b[0m",
        "\u001b[1;35m[WARNING]: Skipping callback plugin 'profile_tasks', unable to load\u001b[0m",
        "\u001b[0;34mSkipping callback 'awx_display', as we already have a stdout callback.\u001b[0m",
        "\u001b[0;34mSkipping callback 'default', as we already have a stdout callback.\u001b[0m",
        "\u001b[0;34mSkipping callback 'minimal', as we already have a stdout callback.\u001b[0m",
        "\u001b[0;34mSkipping callback 'oneline', as we already have a stdout callback.\u001b[0m",
        "",
        "PLAYBOOK: ping_win.yml *********************************************************",
        "\u001b[0;34mPositional arguments: /var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml\u001b[0m",
        "\u001b[0;34mverbosity: 4\u001b[0m",
        "\u001b[0;34mconnection: smart\u001b[0m",
        "\u001b[0;34mtimeout: 10\u001b[0m",
        "\u001b[0;34mbecome_method: sudo\u001b[0m",
        "\u001b[0;34mtags: ('all',)\u001b[0m",
        "\u001b[0;34minventory: ('/var/lib/awx/projects/raviprj/WindowsPlaybooks/inventory',)\u001b[0m",
        "\u001b[0;34mforks: 5\u001b[0m",
        "\u001b[0;34m1 plays in /var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml\u001b[0m",
        "",
        "PLAY [ping win] ****************************************************************",
        "\u001b[0;34mredirecting (type: modules) ansible.builtin.setup to ansible.windows.setup\u001b[0m",
        "\u001b[0;34mUsing module file /var/lib/awx/projects/raviprj/WindowsPlaybooks/collections/ansible_collections/ansible/windows/plugins/modules/setup.ps1\u001b[0m",
        "\u001b[0;34mPipelining is enabled.\u001b[0m",
        "\u001b[0;34m<192.168.4.92> ESTABLISH WINRM CONNECTION FOR USER: administrator on PORT 5986 TO 192.168.4.92\u001b[0m",
        "\u001b[0;34mEXEC (via pipeline wrapper)\u001b[0m",
        "",
        "TASK [Gathering Facts] *********************************************************",
        "\u001b[1;30mtask path: /var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml:3\u001b[0m",
        "\u001b[0;32mok: [192.168.4.92]\u001b[0m",
        "\u001b[0;34mMETA: ran handlers\u001b[0m",
        "\u001b[0;34mredirecting (type: modules) ansible.builtin.win_ping to ansible.windows.win_ping\u001b[0m",
        "\u001b[0;34mUsing module file /var/lib/awx/projects/raviprj/WindowsPlaybooks/collections/ansible_collections/ansible/windows/plugins/modules/win_ping.ps1\u001b[0m",
        "\u001b[0;34mPipelining is enabled.\u001b[0m",
        "\u001b[0;34m<192.168.4.92> ESTABLISH WINRM CONNECTION FOR USER: administrator on PORT 5986 TO 192.168.4.92\u001b[0m",
        "\u001b[0;34mEXEC (via pipeline wrapper)\u001b[0m",
        "",
        "TASK [test ping] ***************************************************************",
        "\u001b[1;30mtask path: /var/lib/awx/projects/raviprj/WindowsPlaybooks/ping_win.yml:6\u001b[0m",
        "\u001b[0;32mok: [192.168.4.92] => {\u001b[0m",
        "\u001b[0;32m    \"changed\": false,\u001b[0m",
        "\u001b[0;32m    \"invocation\": {\u001b[0m",
        "\u001b[0;32m        \"module_args\": {\u001b[0m",
        "\u001b[0;32m            \"data\": \"pong\"\u001b[0m",
        "\u001b[0;32m        }\u001b[0m",
        "\u001b[0;32m    },\u001b[0m",
        "\u001b[0;32m    \"ping\": \"pong\"\u001b[0m",
        "\u001b[0;32m}\u001b[0m",
        "\u001b[0;34mMETA: ran handlers\u001b[0m",
        "\u001b[0;34mMETA: ran handlers\u001b[0m",
        "",
        "PLAY RECAP *********************************************************************",
        "\u001b[0;32m192.168.4.92\u001b[0m               : \u001b[0;32mok=2   \u001b[0m changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   "
    ],
    "status": "successful",
    "status_color": 13
}